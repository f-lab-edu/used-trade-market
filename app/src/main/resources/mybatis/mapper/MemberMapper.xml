<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.dao.MemberDAO">
    <insert id="registerMember" parameterType="com.market.dto.MemberDTO" useGeneratedKeys="true" keyProperty="memberNo">
        INSERT INTO MEMBER
            (
             memberId,
             memberPassword,
             memberName,
             address,
             memberpoint,
             memberRole,
             memberEmail
            )
        VALUES
            (
             #{memberId},
             #{memberPassword},
             #{memberName},
             #{address},
             #{point},
             #{memberRole},
             #{memberEmail}
            )
    </insert>

    <select id="getAllMember" resultType="com.market.dto.MemberDTO">
        SELECT
            memberNo,
            memberId,
            memberPassword,
            memberName,
            address,
            memberpoint,
            memberRole,
            memberEmail
        FROM MEMBER
    </select>

    <select id="getMemberSelectOne" resultType="com.market.dto.MemberDTO" parameterType="long">
        SELECT
            memberNo,
            memberId,
            memberPassword,
            memberName,
            address,
            memberpoint,
            memberRole,
            memberEmail
        FROM MEMBER
        WHERE memberNo = #{memberNo}

    </select>

    <delete id="deleteMember" parameterType="long">
        DELETE
        FROM MEMBER
        WHERE memberNo = #{memberNo}
    </delete>

    <update id="updateMemberInfo" parameterType="com.market.dto.MemberDTO" useGeneratedKeys="true" keyProperty="memberNo">
        UPDATE MEMBER
        SET memberName = #{memberName},
            memberPassword = #{memberPassword},
            address = #{address}
        WHERE memberNo = #{memberNo}
    </update>

    <select id="findByMemberId" parameterType="string" resultType="com.market.dto.MemberDTO">
        SELECT
            memberNo,
            memberId,
            memberPassword,
            memberName,
            address,
            memberpoint,
            memberRole,
            memberEmail
        FROM MEMBER
        WHERE memberId = #{memberId}
    </select>

    <select id="findByMemberEmail" parameterType="string" resultType="com.market.dto.MemberDTO">
        SELECT
            memberNo,
            memberId,
            memberPassword,
            memberName,
            address,
            memberpoint,
            memberRole,
            memberEmail
        FROM MEMBER
        WHERE memberEmail = #{memberEmail}
    </select>
</mapper>